# -*- coding: utf-8 -*-
"""mergingData.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ogb2IxoB2XZLvXG80nVrpr9vaLf7Q08J

Bik to CSV
"""

import pandas as pd

csvTable = pd.read_table('Bik_dataset-papers_with_endpoint_reached.tsv', sep = '\t', encoding = "ISO-8859-1")
#pd.DataFrame(csvTable)

df = pd.DataFrame(csvTable[0:214])

"""# Lab size"""

findingsData = pd.read_json('findings.json')

labs = []
for col in findingsData:
  try:
    labs.append(findingsData[col][1][0])
  except:
    labs.append('')

df['Labs'] = labs

labsData = pd.read_json('labs.json')

index = 0
labSizes = []
for index in range(len(df)):
  currentLab = df["Labs"][index]
  if currentLab != '':
    labSizes.append(labsData[currentLab][0])
  else:
    labSizes.append('')

df['Lab Size'] = labSizes

"""# Publication Rate"""

import json

f = open('authors.json')
authorsData = json.load(f)

nPublications = []

index = 0
for index in range(len(df)):
  authors = df['Authors'][index]
  splitAuthors = authors.split(", ")
  currentPubString = ''
  for author in splitAuthors:
    try:
      currentPubString += str(authorsData[author]['author_info'][author]['nbr_pubs']) + ' '
    except:
      currentPubString += ' '
  nPublications.append(currentPubString)

df['nPublications'] = nPublications

"""# Other Journals"""

otherJournals = []
index = 0
for index in range(len(df)):
  authors = df['Authors'][index]
  splitAuthors = authors.split(", ")
  currentJournalString = ''
  for author in splitAuthors:
    try:
      for i in range(len(authorsData[author]['author_info'][author]['published_journals'])):
        currentJournalString += authorsData[author]['author_info'][author]['published_journals'][i] + ' '
    except:
      currentJournalString += ' '
  otherJournals.append(currentJournalString)

df["Other Journals"] = otherJournals

"""# University (first author)"""

f = open('Affiliation.json')
affiliationData = json.load(f)

university = []
for i in range(len(affiliationData)):
  
  university.append(list(affiliationData[i].values())[0].strip())

df['University'] = university

"""# Career Duration (first author)"""

f = open('Career_Duration.json')
careerData = json.load(f)

careerLengths = []
for i in range(len(careerData)):
  careerLengths.append(list(careerData[i].values())[0])

df['Career Duration'] = careerLengths

"""# Highest Degree Obtained (pending)

# Degree Area
"""

f = open('Degree_Area.json')
degreeData = json.load(f)

degreeAreas = []
for i in range(len(degreeData)):
  degreeAreas.append(list(degreeData[i].values())[0])

df["Degree Area"] = degreeAreas

"""# Dataset 1"""

with open('universityData (2).json', encoding = 'utf-8') as inputfile:
  uniData = pd.read_json(inputfile)

uniData = uniData.rename(columns = {'Institution':'University'})

df = pd.merge(df, uniData, how = "left", on =["University", "University"])

"""# Dataset 2"""

with open('universities_ranking.json', encoding = 'utf-8') as inputfile:
  rankingData = pd.read_json(inputfile)

rankingData = rankingData[['title', 'ranking', 'students staff ratio', 'perc intl students']]

rankingData = rankingData.rename(columns = {'title':'University'})

df = pd.merge(df, rankingData, how = "left", on=["University", "University"])

"""# Dataset 3"""

# converting dataframe to tsv:
#https://www.geeksforgeeks.org/how-to-write-pandas-dataframe-as-tsv-using-python/